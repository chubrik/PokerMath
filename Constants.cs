namespace PokerMath;

internal class Constants
{
    public const int AllCardsCount = 52;
    public const int FlopCount = 19600; // 50 * 49 * 48 / 6;
    public const int FlopDialCount = 1070190; // (47 * 46 / 2) * (45 * 44 / 2)

    public static readonly IReadOnlyList<Card> AllCards = new List<Card>
    {
        new Card(Value._A, Suit.Spades),
        new Card(Value._A, Suit.Hearts),
        new Card(Value._A, Suit.Diamonds),
        new Card(Value._A, Suit.Clubs),
        new Card(Value._K, Suit.Spades),
        new Card(Value._K, Suit.Hearts),
        new Card(Value._K, Suit.Diamonds),
        new Card(Value._K, Suit.Clubs),
        new Card(Value._Q, Suit.Spades),
        new Card(Value._Q, Suit.Hearts),
        new Card(Value._Q, Suit.Diamonds),
        new Card(Value._Q, Suit.Clubs),
        new Card(Value._J, Suit.Spades),
        new Card(Value._J, Suit.Hearts),
        new Card(Value._J, Suit.Diamonds),
        new Card(Value._J, Suit.Clubs),
        new Card(Value._T, Suit.Spades),
        new Card(Value._T, Suit.Hearts),
        new Card(Value._T, Suit.Diamonds),
        new Card(Value._T, Suit.Clubs),
        new Card(Value._9, Suit.Spades),
        new Card(Value._9, Suit.Hearts),
        new Card(Value._9, Suit.Diamonds),
        new Card(Value._9, Suit.Clubs),
        new Card(Value._8, Suit.Spades),
        new Card(Value._8, Suit.Hearts),
        new Card(Value._8, Suit.Diamonds),
        new Card(Value._8, Suit.Clubs),
        new Card(Value._7, Suit.Spades),
        new Card(Value._7, Suit.Hearts),
        new Card(Value._7, Suit.Diamonds),
        new Card(Value._7, Suit.Clubs),
        new Card(Value._6, Suit.Spades),
        new Card(Value._6, Suit.Hearts),
        new Card(Value._6, Suit.Diamonds),
        new Card(Value._6, Suit.Clubs),
        new Card(Value._5, Suit.Spades),
        new Card(Value._5, Suit.Hearts),
        new Card(Value._5, Suit.Diamonds),
        new Card(Value._5, Suit.Clubs),
        new Card(Value._4, Suit.Spades),
        new Card(Value._4, Suit.Hearts),
        new Card(Value._4, Suit.Diamonds),
        new Card(Value._4, Suit.Clubs),
        new Card(Value._3, Suit.Spades),
        new Card(Value._3, Suit.Hearts),
        new Card(Value._3, Suit.Diamonds),
        new Card(Value._3, Suit.Clubs),
        new Card(Value._2, Suit.Spades),
        new Card(Value._2, Suit.Hearts),
        new Card(Value._2, Suit.Diamonds),
        new Card(Value._2, Suit.Clubs),
    };

    // Все 169 возможных рук
    public static readonly IReadOnlyList<IReadOnlyList<Card>> AllHands = new List<IReadOnlyList<Card>>
    {
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._A, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._K, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._Q, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._J, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._T, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._9, Suit.Hearts) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._8, Suit.Hearts) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._5, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._4, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._3, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._2, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._K, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._Q, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._J, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._T, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._9, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._8, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._7, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._Q, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._J, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._T, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._9, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._8, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._7, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._J, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._T, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._9, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._8, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._7, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._T, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._9, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._8, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._7, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._9, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._8, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._7, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._8, Suit.Spades) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._7, Suit.Spades) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._7, Suit.Spades) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._6, Suit.Spades) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._5, Suit.Spades) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._5, Suit.Spades), new Card(Value._4, Suit.Spades) },
        new List<Card> { new Card(Value._5, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._5, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._4, Suit.Spades), new Card(Value._3, Suit.Spades) },
        new List<Card> { new Card(Value._4, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._3, Suit.Spades), new Card(Value._2, Suit.Spades) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._K, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._Q, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._J, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._T, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._9, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._8, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._A, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._Q, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._J, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._T, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._9, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._8, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._K, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._J, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._T, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._9, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._8, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._Q, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._T, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._9, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._8, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._J, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._9, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._8, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._T, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._8, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._9, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._7, Suit.Hearts) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._8, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._6, Suit.Hearts) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._7, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._5, Suit.Hearts) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._6, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._5, Suit.Spades), new Card(Value._4, Suit.Hearts) },
        new List<Card> { new Card(Value._5, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._5, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._4, Suit.Spades), new Card(Value._3, Suit.Hearts) },
        new List<Card> { new Card(Value._4, Suit.Spades), new Card(Value._2, Suit.Hearts) },
        new List<Card> { new Card(Value._3, Suit.Spades), new Card(Value._2, Suit.Hearts) },
    };
}
